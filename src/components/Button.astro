---
const { label, variant = "default" } = Astro.props;
---

<button class={variant}>
    {label}
    <div class="color-wrapper">
        <div class="color-a"></div>
        <div class="color-b"></div>
        <div class="color-c"></div>
        <div class="color-d"></div>
    </div>
</button>
<style>
    button {
        font-family: Gustavo, sans-serif;
        font-weight: 500;
        padding: 16px 24px;
        border: none;
        background-color: var(--brown);
        color: var(--nude);
        cursor: pointer;
        font-size: 15px;
        overflow: clip;
    }
    .color-wrapper {
        display: none;
    }

    .lighter {
        background-color: var(--fg2);
        width: 100%;
        margin-top: 24px;
        position: relative;
        transition: background-color 1s;

        & .color-wrapper {
            display: flex;
            position: absolute;
            top: -40px;
            height: 1000px;
            width: 100%;
            mix-blend-mode: screen;
            transform: rotate(-20deg) translateX(-150%);
            transition: transform 0.8s cubic-bezier(0.52, 0.06, 0.64, 0.99);
        }

        & .color-a {
            width: 38%;
            background-color: #0007af;
        }

        & .color-b {
            width: 15%;
            background-color: #0066ff;
        }

        & .color-c {
            width: 20%;
            background-color: #ff5a5a;
        }

        & .color-d {
            width: 32%;
            background-color: #c40018;
        }

        &:hover {
            background-color: black;
            & .color-wrapper {
                transform: rotate(-20deg) translateX(150%);
            }
        }
    }

    .default {
        position: relative;
        transition: background-color 1s;
        & .color-wrapper {
            display: flex;
            position: absolute;
            top: -40px;
            height: 100px;
            width: 100%;
            mix-blend-mode: screen;
            transform: rotate(-20deg) translateX(-150%);
            transition: transform 1s cubic-bezier(0.52, 0.06, 0.64, 0.99);
        }

        & .color-a {
            width: 38%;
            background-color: #0007af;
        }

        & .color-b {
            width: 15%;
            background-color: #0066ff;
        }

        & .color-c {
            width: 20%;
            background-color: #ff5a5a;
        }

        & .color-d {
            width: 32%;
            background-color: #c40018;
        }

        &:hover {
            background-color: black;
            & .color-wrapper {
                transform: rotate(-20deg) translateX(150%);
            }
        }
    }

    .underline {
        background-color: transparent;
        color: var(--fg2);
        position: relative;
        padding: 12px 0;

        &::after {
            content: "";
            position: absolute;
            left: 50%;
            height: 1px;
            width: 0;
            background-color: var(--fg2);
            bottom: 0;
            transition: 0.4s cubic-bezier(0.17, 0.67, 0.61, 1.29);
        }

        &:hover::after {
            left: 0;
            width: 100%;
        }
    }
</style>
